
D:\Mass Storage\Math\chompy>python chompyDriver.py
Graph Solving 9X10.json
loaded: 792.1141319274902
Generated states: 1823.679838180542
Generated parent dict: 3443.465170621872
Filename: D:\Mass Storage\Math\chompy\graph.py

Line #    Mem usage    Increment   Line Contents
================================================
     5   7957.6 MiB   7957.6 MiB   @profile
     6                             def gen_path_numbers(perms, bXparents):
     7                                  #dictionary of board permutations with their playable options
     8                                  #start with fully bitten board
     9
    10   7957.9 MiB      0.3 MiB        endBoard = (util.genEndBoard(len(perms[0]), len(perms[0][0]))).astype(int).tolist()
    11
    12   7957.9 MiB      0.0 MiB        bXnum = {util.dKey(endBoard) : 0}
    13                                  #sorted by least number of choices
    14
    15                                  #choices:boards
    16   7957.9 MiB      0.0 MiB        cXb = {}
    17   7957.9 MiB      0.0 MiB        for i in range(len(endBoard)*len(endBoard[0])):
    18   7957.9 MiB      0.0 MiB                cXb[i] = []
    19   7958.4 MiB      0.0 MiB        for b in perms:
    20   7958.4 MiB      0.1 MiB                cXb[len(util.getChoices(b))].append(b)
    21
    22   7958.4 MiB      0.0 MiB        checked = []
    23
    24   7978.9 MiB      0.0 MiB        for i in range(len(endBoard)*len(endBoard[0])):
    25   7978.9 MiB      0.0 MiB                for cB in cXb[i]:
    26   7978.9 MiB      0.0 MiB                        cBKey = util.dKey(cB)
    27   7978.9 MiB      0.0 MiB                        num = bXnum[cBKey]
    28   7978.9 MiB      0.0 MiB                        for parent in bXparents[cBKey]:
    29   7978.9 MiB      0.0 MiB                                pKey = util.dKey(parent)
    30   7978.9 MiB      0.0 MiB                                if not (pKey in bXnum.keys()):
    31   7978.9 MiB      2.5 MiB                                        bXnum[pKey] = num + 1
    32   7978.9 MiB      0.0 MiB                                        continue
    33   7978.9 MiB      0.0 MiB                                pNum = bXnum[pKey]
    34   7978.9 MiB      0.0 MiB                                if (num + 1) % 2 == 1 and (pNum % 2 == 0 or (num+1) > pNum):
    35   7978.9 MiB      0.0 MiB                                        bXnum[pKey] = num + 1
    36   7978.9 MiB      0.0 MiB                                elif (num + 1) > pNum and pNum % 2 == 0:
    37   7978.9 MiB      0.0 MiB                                        bXnum[pKey] = num + 1
    38   7978.8 MiB      0.0 MiB        return bXnum


Generated graph numbers: 4996.82266998291
Combined Dicts: 5000.384641647339
Gened first moves: 5000.402568817139
Stored: 5399.2640812397
Removed old: 5399.272059679031
Del all the things: 5401.870498657227
Elapsed time: 5401.870498657227
Filename: chompyDriver.py

Line #    Mem usage    Increment   Line Contents
================================================
   413     31.1 MiB     31.1 MiB   @profile
   414                             def graphManual(file):
   415     31.1 MiB      0.0 MiB        start = time.time()
   416
   417     31.1 MiB      0.0 MiB        print("Graph Solving " + str(file))
   418     31.1 MiB      0.0 MiB        fileName = TRANSFER_FOLDER / file
   419                                  #[[states],{stateXchild}]
   420   8497.0 MiB   8465.9 MiB        bXchild = util.loadStates(fileName)
   421   8497.0 MiB      0.0 MiB        if bXchild == "Failed":
   422                                          print("FAILED")
   423                                          return
   424   8497.0 MiB      0.0 MiB        print("loaded: " + str(time.time()-start))
   425
   426   8499.8 MiB      2.8 MiB        states = util.getStatesFromDict(bXchild)
   427   8499.7 MiB      0.0 MiB        print("Generated states: " + str(time.time()-start))
   428
   429                                  #Gen parent dict
   430   8499.7 MiB      0.0 MiB        bXparent = {}
   431   8504.7 MiB      0.0 MiB        for b in states:
   432   8504.7 MiB      2.5 MiB                bXparent[util.dKey(b)] = []
   433   8512.8 MiB      0.0 MiB        for b in states:
   434   8512.8 MiB      0.0 MiB                for child in bXchild[util.dKey(b)]:
   435                                                  #if not b in bXparent[util.dKey(child)]:
   436   8512.8 MiB      0.3 MiB                        bXparent[util.dKey(child)].append(b)
   437   7956.3 MiB      0.0 MiB        print("Generated parent dict: " + str(time.time()-start))
   438   7977.6 MiB     21.3 MiB        bXnum = graph.gen_path_numbers(states, bXparent)
   439   7977.6 MiB      0.0 MiB        print("Generated graph numbers: " + str(time.time()-start))
   440   7977.6 MiB      0.0 MiB        bXchild_num = {}
   441   7989.0 MiB      0.0 MiB        for key in bXchild.keys():
   442   7989.0 MiB      2.5 MiB                bXchild_num[key] = (bXchild[key], bXnum[key])
   443   7989.0 MiB      0.0 MiB        print("Combined Dicts: " + str(time.time()-start))
   444   7989.1 MiB      0.1 MiB        firstMoves = graph.getFirstMoves(states, bXchild, bXnum)
   445   7989.1 MiB      0.0 MiB        print("Gened first moves: " + str(time.time()-start))
   446   7989.1 MiB      0.0 MiB        size = (len(states[0]), len(states[0][0]))
   447
   448
   449                                  #data = [states, bXchild, bXparent, bXnum, firstMoves]
   450
   451                                  #data = "filler + graph"
   452
   453   8529.7 MiB    540.6 MiB        util.storeSolved(bXchild_num, firstMoves, size, TEST_FOLDER / file)
   454   8529.7 MiB      0.0 MiB        print("Stored: " + str(time.time()-start))
   455   8529.7 MiB      0.0 MiB        os.remove(fileName)
   456   8529.7 MiB      0.0 MiB        print("Removed old: " + str(time.time()-start))
   457   8526.6 MiB      0.0 MiB        del bXchild
   458   8499.5 MiB      0.0 MiB        del bXparent
   459   8494.5 MiB      0.0 MiB        del bXnum
   460    213.5 MiB      0.0 MiB        del bXchild_num
   461     34.6 MiB      0.0 MiB        del states
   462     34.6 MiB      0.0 MiB        end = time.time()
   463     34.6 MiB      0.0 MiB        print("Del all the things: " + str(time.time()-start))
   464     34.6 MiB      0.0 MiB        print("Elapsed time: " + str(end-start))


Filename: chompyDriver.py

Line #    Mem usage    Increment   Line Contents
================================================
   477     31.1 MiB     31.1 MiB   @profile
   478                             def graphTest():
   479
   480     31.1 MiB      0.0 MiB        file = "9X10.json"
   481
   482     33.8 MiB      2.7 MiB        graphManual(file)



D:\Mass Storage\Math\chompy>